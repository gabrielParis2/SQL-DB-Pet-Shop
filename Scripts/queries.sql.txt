Exercicios gpt--

1.1 - Liste a quantidade de atendimentos realizados para cada animal, ordenando pelo número total de atendimentos.
	select *, count(*) from atendimentos group by id_animal order by count(*);

1.2 - Liste os funcionários que realizaram mais de 5 atendimentos.
	select id_atendimento, count(*) from atendimentos group by id_funcionario having count(*) > 3;

1.3 - Liste os produtos mais vendidos, mas apenas aqueles que foram vendidos mais de 3 vezes.
	select id_produto, count(*) from vendas group by id_produto having count(*) >3;

1.4 - Mostre quantos animais existem de cada tipo, ordenando do maior para o menor.
	select tipo, count(*) from animais group by tipo order by count(*) desc;

1.5 - Mostre quantos donos existem por bairro (parte do endereço), considerando apenas bairros com mais de 2 donos registrados.
	select endereco, count(*) from donos group by endereco having count(*) >=2;

2.1 - Adicione uma nova coluna cadastrado_em na tabela animais para armazenar a data de cadastro.
	alter table animais add column cadastrado_em date;

2.2 - Defina a data de cadastro dos animais que foram inseridos no banco de dados antes de hoje.
	update animais set cadastrado_em = '2024-01-01' where id=1; 
2.3 - Crie uma nova coluna id_servico_favorito na tabela donos e transforme-a em chave estrangeira da tabela servicos.
	alter table donos add foreign key (id_servico_favorito) references servicos (id);

2.4 - Atualize a coluna id_servico_favorito para definir que o dono de ID 3 tem preferência pelo serviço de ID 2.
	update donos set id_servico_favorito = 2 where id = 3;

2.5 - Atualize os pesos dos cachorros da tabela animais, adicionando 2kg para aqueles que possuem mais de 10kg.
	update animais set peso = peso+2 where peso > 10;

2.6 - Liste os nomes dos animais junto com os nomes de seus donos.
	select donos.nome, animais.tipo, animais.nome from donos inner join animais on animais.id = donos.id order by animais.tipo;

2.7.1 - create table assistencia(
	id int not null auto_increment,
	id_funcionario int,
	id_animal int,
	id_atendimento int,
	primary key (id),
	foreign key (id_funcionario) references funcionarios (id_funcionario),
	foreign key (id_animal) references animais(id),
	foreign key (id_atendimento) references atendimentos(id_atendimento));
2.7.2 - Liste os atendimentos, mostrando a data do atendimento, o nome do animal e o nome do funcionário que realizou o atendimento.
	select atendimentos.data_atendimento, assistencia.id, funcionarios.nome from atendimentos
inner join assistencia on atendimentos.id_atendimento = assistencia.id_atendimento
inner join funcionarios on funcionarios.id_funcionario = assistencia.id_funcionario;

2.8 - Mostre os produtos vendidos junto com os funcionários que os venderam.
	select vendas.id_produto, funcionarios.nome from vendas inner join funcionarios on funcionarios.id_funcionario = vendas.id_funcionario order by funcionarios.id_funcionarionome;

2.9 - Liste os donos e os serviços que eles mais utilizam.
	select  donos.nome, servicos.nome_servico, count(*) from servicos inner join donos on donos.id = servicos.id_dono group by donos.nome order by count(*) desc; 
 
